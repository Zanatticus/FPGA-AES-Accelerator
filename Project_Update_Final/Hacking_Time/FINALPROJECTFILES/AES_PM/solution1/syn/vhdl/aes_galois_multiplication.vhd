-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity aes_galois_multiplication is
port (
    ap_ready : OUT STD_LOGIC;
    a : IN STD_LOGIC_VECTOR (7 downto 0);
    b : IN STD_LOGIC_VECTOR (3 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of aes_galois_multiplication is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_1B : STD_LOGIC_VECTOR (7 downto 0) := "00011011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal empty_fu_38_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln356_fu_50_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_56_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln358_fu_64_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_78_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln357_fu_70_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln356_1_fu_94_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_100_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln358_1_fu_108_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_122_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln357_1_fu_114_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln356_2_fu_138_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_144_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln358_2_fu_152_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_166_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln357_2_fu_158_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln353_fu_86_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln353_1_fu_130_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln353_fu_182_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_fu_42_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln353_2_fu_174_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln353_1_fu_188_p2 : STD_LOGIC_VECTOR (7 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= (xor_ln353_1_fu_188_p2 xor select_ln353_2_fu_174_p3);
    empty_fu_38_p1 <= b(1 - 1 downto 0);
    p_fu_42_p3 <= 
        a when (empty_fu_38_p1(0) = '1') else 
        ap_const_lv8_0;
    select_ln353_1_fu_130_p3 <= 
        select_ln357_1_fu_114_p3 when (tmp_3_fu_122_p3(0) = '1') else 
        ap_const_lv8_0;
    select_ln353_2_fu_174_p3 <= 
        select_ln357_2_fu_158_p3 when (tmp_5_fu_166_p3(0) = '1') else 
        ap_const_lv8_0;
    select_ln353_fu_86_p3 <= 
        select_ln357_fu_70_p3 when (tmp_1_fu_78_p3(0) = '1') else 
        ap_const_lv8_0;
    select_ln357_1_fu_114_p3 <= 
        xor_ln358_1_fu_108_p2 when (tmp_2_fu_100_p3(0) = '1') else 
        shl_ln356_1_fu_94_p2;
    select_ln357_2_fu_158_p3 <= 
        xor_ln358_2_fu_152_p2 when (tmp_4_fu_144_p3(0) = '1') else 
        shl_ln356_2_fu_138_p2;
    select_ln357_fu_70_p3 <= 
        xor_ln358_fu_64_p2 when (tmp_fu_56_p3(0) = '1') else 
        shl_ln356_fu_50_p2;
    shl_ln356_1_fu_94_p2 <= std_logic_vector(shift_left(unsigned(select_ln357_fu_70_p3),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    shl_ln356_2_fu_138_p2 <= std_logic_vector(shift_left(unsigned(select_ln357_1_fu_114_p3),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    shl_ln356_fu_50_p2 <= std_logic_vector(shift_left(unsigned(a),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_1_fu_78_p3 <= b(1 downto 1);
    tmp_2_fu_100_p3 <= select_ln357_fu_70_p3(7 downto 7);
    tmp_3_fu_122_p3 <= b(2 downto 2);
    tmp_4_fu_144_p3 <= select_ln357_1_fu_114_p3(7 downto 7);
    tmp_5_fu_166_p3 <= b(3 downto 3);
    tmp_fu_56_p3 <= a(7 downto 7);
    xor_ln353_1_fu_188_p2 <= (xor_ln353_fu_182_p2 xor p_fu_42_p3);
    xor_ln353_fu_182_p2 <= (select_ln353_fu_86_p3 xor select_ln353_1_fu_130_p3);
    xor_ln358_1_fu_108_p2 <= (shl_ln356_1_fu_94_p2 xor ap_const_lv8_1B);
    xor_ln358_2_fu_152_p2 <= (shl_ln356_2_fu_138_p2 xor ap_const_lv8_1B);
    xor_ln358_fu_64_p2 <= (shl_ln356_fu_50_p2 xor ap_const_lv8_1B);
end behav;
